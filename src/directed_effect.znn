import "object_effect.znn";
export import "glyph.znn";
export import "std/box.znn";
import "game.znn";

export struct ProjectileEffect {
  double speed;
  double size;
  double lifeTime;
  box<ObjectEffect> effect;
  Glyph glyph;
};

ProjectileEffect copy(ProjectileEffect*) = default;

void apply(ProjectileEffect* effect, vec2d pos, double dir, Game mutable* game) {
  game^.spawnProjectile(null, pos, from_polar(dir, effect^.speed), effect^.glyph.copy(), effect^.size,
      effect^.effect^.copy(), effect^.lifeTime);
}

export struct TranslateEffect {
  double length;
  box<DirectedEffect> effect;
};

TranslateEffect copy(TranslateEffect*) = default;

void apply(TranslateEffect* effect, vec2d pos, double dir, Game mutable* game) {
  effect^.effect^.apply(pos + from_polar(dir, effect^.length), dir, game);
}

export union DirectedEffect {
  ProjectileEffect projectile;
  TranslateEffect translate;
};

export DirectedEffect copy(DirectedEffect*) = default;

export void apply(virtual DirectedEffect*, vec2d pos, double dir, Game mutable*);
